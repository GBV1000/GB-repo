#3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
#Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список 
#необходимо только числами. Класс-исключение должен контролировать типы данных элементов списка.
#Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам
#не остановит работу скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный 
#список с числами выводится на экран.
#Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода 
#пользователем очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, 
#только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) 
#и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.



class Only_number_exp(Exception):
	def __init__(self, data):
		self.data = data


def dig_list(numbers=0):
	numbers_list = list()
	while numbers_list != 'exit':
		try:
			numbers = input('Введите число: ')
			if not numbers.isdigit():
				raise Only_number_exp(f'Данные {user_digit} не являются числом.')
			numbers_list.append(numbers)
			print(f'Данные  {numbers} добавлены в список')
		except Only_number_exp as err:
			print(err)
		print(f'Данные в списке {numbers_list}')


dig_list()
